# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-backend:
    working_directory: ~/EZGRADE/backend
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:17.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:

      - checkout:
          path: ~/EZGRADE

      - run:
          name: Install dependencies
          command: |
            mvn clean install

      - run:
          name: Run linting
          command: |
            mvn checkstyle:check

      - run:
          name: Build
          command: |
            mvn -B -DskipTests clean package

    # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-frontend:
    working_directory: ~/EZGRADE/frontend
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: node:14
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout:
          path: ~/EZGRADE
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Install dependencies
          command: |
            npm install

      - run:
          name: Run linting
          command: |
            npx eslint .

      - run:
          name: Build app
          command: |
            npm build



# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-backend
      - build-frontend